# Corpus settings
[Corpus]

# Manually annotated corpora
[[GoldCorpus]]

# Raw text corpora
[[RawCorpus]]
# If greater than 0, the output will be written to a series of files, each
# (save the last one) approximately this long.
max_lines = integer(min=0, default=0)

[[[hu_mnsz2]]]
# Include paragraphs marked with lang=foreign.
foreign = boolean(default=no)

[[[hu_szeged]]]
# Keep all columns. By default, the output files will only have 3 columns:
# word, lemma, POS.
keep_columns = boolean(default=no)

[[[hu_webcorpus]]]
# The source directory contains the uncompressed corpus (1 file per document).
# Not recommended; by default, the preprocessor expects tar.gz files.
compressed = boolean(default=yes)
# The HTML entity / characters ratio above which a sentence is discarded.
max_entities = float(min=0, max=1, default=0.2)

# Generic newline-separated text corpus
[[[text]]]

# Preprocessor settings
[Preprocessor]

[[CoreNLP]]
# A Python ConfigParser-style configuration file that contains the parameters
# passed to the CoreNLP server. If there is a "%%" in the file name, it will be
# replaced by the id of the current process. This feature should be used in a
# multiprocessing setting.
# TODO include it instead as a section.
corenlp_props = string()
# The length of a text chunk sent to the server.
max_length = integer(default=10000)

[[GATE]]
# The hunlp-GATE property file used to start the server. If there is a "%%" in
# the file name, it will be replaced by the id of the current process. This
# feature should be used in a multiprocessing setting.
# TODO include it instead as a section.
gate_props = string()
# The length of a text chunk sent to the server.
max_length = integer(default=10000)
# Restart the GATE server after every N sentences to avoid OutOfMemoryException
# (should not happen anymore, though).
restart_every = integer(min=0, default=0)

# Logs input that segfaults Quntoken.
[[qt_errors]]
# The quntoken binary.
quntoken = string()
# The length of a text chunk to send to quntoken.
max_length = integer(min=0, default=10000)
# The directory used to create temporary files. The default is the RAM disk.
tmp_dir = string(default="/dev/shm")
